<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.dao.DictMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.pojo.Dict">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="is_load" jdbcType="VARCHAR" property="isLoad" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dict
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.springboot.pojo.Dict">
    insert into dict (id, code, `text`, 
      `type`, `value`, is_load
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, #{isLoad,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.pojo.Dict">
    update dict
    set code = #{code,jdbcType=VARCHAR},
      `text` = #{text,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `value` = #{value,jdbcType=VARCHAR},
      is_load = #{isLoad,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, code, `text`, `type`, `value`, is_load
    from dict
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, code, `text`, `type`, `value`, is_load
    from dict
  </select>
</mapper>