<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.dao.GenTableColumnMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.pojo.GenTableColumn">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="gen_table_id" jdbcType="VARCHAR" property="genTableId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="comments" jdbcType="VARCHAR" property="comments" />
    <result column="jdbc_type" jdbcType="VARCHAR" property="jdbcType" />
    <result column="jdbc_length" jdbcType="VARCHAR" property="jdbcLength" />
    <result column="java_type" jdbcType="VARCHAR" property="javaType" />
    <result column="java_field" jdbcType="VARCHAR" property="javaField" />
    <result column="is_pk" jdbcType="CHAR" property="isPk" />
    <result column="is_null" jdbcType="CHAR" property="isNull" />
    <result column="is_insert" jdbcType="CHAR" property="isInsert" />
    <result column="is_edit" jdbcType="CHAR" property="isEdit" />
    <result column="is_list" jdbcType="CHAR" property="isList" />
    <result column="is_query" jdbcType="CHAR" property="isQuery" />
    <result column="query_type" jdbcType="VARCHAR" property="queryType" />
    <result column="show_type" jdbcType="VARCHAR" property="showType" />
    <result column="dict_type" jdbcType="VARCHAR" property="dictType" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sort" jdbcType="DECIMAL" property="sort" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gen_table_column
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.springboot.pojo.GenTableColumn">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gen_table_column (id, gen_table_id, `name`, 
      comments, jdbc_type, jdbc_length, 
      java_type, java_field, is_pk, 
      is_null, is_insert, is_edit, is_list, 
      is_query, query_type, show_type, 
      dict_type, create_by, create_date, 
      update_by, update_date, remarks, 
      sort, del_flag)
    values (#{id,jdbcType=VARCHAR}, #{genTableId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{comments,jdbcType=VARCHAR}, #{jdbcType,jdbcType=VARCHAR}, #{jdbcLength,jdbcType=VARCHAR}, 
      #{javaType,jdbcType=VARCHAR}, #{javaField,jdbcType=VARCHAR}, #{isPk,jdbcType=CHAR}, 
      #{isNull,jdbcType=CHAR}, #{isInsert,jdbcType=CHAR}, #{isEdit,jdbcType=CHAR}, #{isList,jdbcType=CHAR}, 
      #{isQuery,jdbcType=CHAR}, #{queryType,jdbcType=VARCHAR}, #{showType,jdbcType=VARCHAR}, 
      #{dictType,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{sort,jdbcType=DECIMAL}, #{delFlag,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.pojo.GenTableColumn">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gen_table_column
    set gen_table_id = #{genTableId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      comments = #{comments,jdbcType=VARCHAR},
      jdbc_type = #{jdbcType,jdbcType=VARCHAR},
      jdbc_length = #{jdbcLength,jdbcType=VARCHAR},
      java_type = #{javaType,jdbcType=VARCHAR},
      java_field = #{javaField,jdbcType=VARCHAR},
      is_pk = #{isPk,jdbcType=CHAR},
      is_null = #{isNull,jdbcType=CHAR},
      is_insert = #{isInsert,jdbcType=CHAR},
      is_edit = #{isEdit,jdbcType=CHAR},
      is_list = #{isList,jdbcType=CHAR},
      is_query = #{isQuery,jdbcType=CHAR},
      query_type = #{queryType,jdbcType=VARCHAR},
      show_type = #{showType,jdbcType=VARCHAR},
      dict_type = #{dictType,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=DECIMAL},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, gen_table_id, `name`, comments, jdbc_type, jdbc_length, java_type, java_field, 
    is_pk, is_null, is_insert, is_edit, is_list, is_query, query_type, show_type, dict_type, 
    create_by, create_date, update_by, update_date, remarks, sort, del_flag
    from gen_table_column
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, gen_table_id, `name`, comments, jdbc_type, jdbc_length, java_type, java_field, 
    is_pk, is_null, is_insert, is_edit, is_list, is_query, query_type, show_type, dict_type, 
    create_by, create_date, update_by, update_date, remarks, sort, del_flag
    from gen_table_column
  </select>
</mapper>