<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login" jdbcType="VARCHAR" property="login" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="birth_date" jdbcType="TIMESTAMP" property="birthDate" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="street_address" jdbcType="VARCHAR" property="streetAddress" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.springboot.pojo.User">
    insert into user (id, `login`, `password`, 
      user_name, address, job, 
      group_id, birth_date, city, 
      district, province, street_address, 
      `state`, `type`, last_login_date
      )
    values (#{id,jdbcType=INTEGER}, #{login,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, 
      #{groupId,jdbcType=BIGINT}, #{birthDate,jdbcType=TIMESTAMP}, #{city,jdbcType=VARCHAR}, 
      #{district,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{streetAddress,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{lastLoginDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.pojo.User">
    update user
    set `login` = #{login,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=BIGINT},
      birth_date = #{birthDate,jdbcType=TIMESTAMP},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      street_address = #{streetAddress,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, `login`, `password`, user_name, address, job, group_id, birth_date, city, 
    district, province, street_address, `state`, `type`, last_login_date
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, `login`, `password`, user_name, address, job, group_id, birth_date, city, 
    district, province, street_address, `state`, `type`, last_login_date
    from user
  </select>
</mapper>